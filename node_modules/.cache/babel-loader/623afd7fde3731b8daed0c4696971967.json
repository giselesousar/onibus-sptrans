{"ast":null,"code":"var _jsxFileName = \"/home/gisele/Documentos/repositorios-github/desafio-aiko-frontend/web/src/pages/Home/components/Mapa/components/PrevisaoChegada/components/Contador/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { FaRedo } from 'react-icons/fa';\nexport default function Contador(props) {\n  const {\n    atualizarDados,\n    atualizar,\n    setAtualizar\n  } = props;\n  const [contador, setContador] = useState(30);\n\n  function handleCounter() {\n    if (contador === 0) {\n      handleAtualizar();\n    } else {\n      setContador(contador - 1);\n    }\n  }\n\n  function handleAtualizar() {\n    setAtualizar(true);\n    setContador(30);\n  }\n\n  useEffect(() => {\n    const interval = setInterval(handleCounter, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [contador]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      direction: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      margin: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, contador), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: 5\n    },\n    onClick: handleAtualizar,\n    size: \"sm\",\n    variant: \"outline-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FaRedo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 78\n    }\n  })));\n}","map":{"version":3,"sources":["/home/gisele/Documentos/repositorios-github/desafio-aiko-frontend/web/src/pages/Home/components/Mapa/components/PrevisaoChegada/components/Contador/index.js"],"names":["React","useState","useEffect","Button","FaRedo","Contador","props","atualizarDados","atualizar","setAtualizar","contador","setContador","handleCounter","handleAtualizar","interval","setInterval","clearInterval","display","direction","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,SAAQC,MAAR,QAAqB,gBAArB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACnC,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA;AAA7B,MAA8CH,KAApD;AAEA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASW,aAAT,GAAwB;AACpB,QAAGF,QAAQ,KAAK,CAAhB,EAAkB;AACfG,MAAAA,eAAe;AACjB,KAFD,MAEK;AACDF,MAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACH;AAEJ;;AACD,WAASG,eAAT,GAA0B;AACtBJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH;;AACDT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,QAAQ,GAAGC,WAAW,CAACH,aAAD,EAAgB,IAAhB,CAA5B;AACF,WAAO,MAAM;AACPI,MAAAA,aAAa,CAACF,QAAD,CAAb;AACH,KAFH;AAGD,GALQ,EAKN,CAACJ,QAAD,CALM,CAAT;AAOA,sBACI;AAAK,IAAA,KAAK,EAAE;AACRO,MAAAA,OAAO,EAAE,MADD;AAERC,MAAAA,SAAS,EAAE;AAFH,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAI,IAAA,KAAK,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIT,QAFJ,CAJJ,eAOI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AACXS,MAAAA,MAAM,EAAE;AADG,KAAf;AAEG,IAAA,OAAO,EAAEN,eAFZ;AAE6B,IAAA,IAAI,EAAC,IAFlC;AAEuC,IAAA,OAAO,EAAC,iBAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEiE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFjE,CAPJ,CADJ;AAaH","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Button} from 'react-bootstrap';\nimport {FaRedo} from 'react-icons/fa';\n\nexport default function Contador(props){\n    const { atualizarDados, atualizar, setAtualizar } = props;\n\n    const [contador, setContador] = useState(30);\n\n    function handleCounter(){\n        if(contador === 0){\n           handleAtualizar();\n        }else{\n            setContador(contador - 1);\n        }\n        \n    }\n    function handleAtualizar(){\n        setAtualizar(true);\n        setContador(30);\n    }\n    useEffect(() => {\n        const interval = setInterval(handleCounter, 1000);\n      return () => {\n            clearInterval(interval);\n        };\n    }, [contador]);\n\n    return(\n        <div style={{\n            display: \"flex\",\n            direction: \"row\"\n        }}>\n            <h4 style={{\n                margin: 5\n            }}>{contador}</h4>\n            <Button style={{\n                margin: 5\n            }} onClick={handleAtualizar} size=\"sm\" variant=\"outline-success\"><FaRedo/></Button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}