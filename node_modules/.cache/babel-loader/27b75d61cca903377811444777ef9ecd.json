{"ast":null,"code":"var _jsxFileName = \"/home/gisele/Documentos/repositorios-github/desafio-aiko-frontend/web/src/pages/Home/components/Mapa/components/PrevisaoChegada/components/Search/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, FormControl, Button } from 'react-bootstrap';\nimport { FaPlus, FaMinus } from 'react-icons/fa';\nimport api from '../../../../../../../../services/api';\nexport default function Search(props) {\n  const {\n    resultados,\n    setResultados,\n    atualizar,\n    setAtualizar\n  } = props;\n  const [paradaValue, setParadaValue] = useState('');\n  const [linhaValue, setLinhaValue] = useState('');\n  const [selectValue, setSelectValue] = useState('');\n\n  function loadResults() {\n    if (selectValue === \"1\") {\n      api.get(`Previsao/Parada?codigoParada=${resultados ? resultados.p.cp : paradaValue}`).then(response => {\n        if (response.data.p === null) {\n          return;\n        }\n\n        setResultados(response.data);\n        console.log(\"entrou\");\n      }).catch(function (error) {//error\n      });\n    } else if (selectValue === \"2\") {\n      api.get(`Previsao?codigoParada=${paradaValue}&codigoLinha=${linhaValue}`).then(response => {\n        if (response.data.p === null) {\n          return;\n        }\n\n        setResultados(response.data);\n      }).catch(function (error) {//error\n      });\n    }\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    loadResults();\n    setParadaValue('');\n  }\n\n  useEffect(() => {\n    loadResults();\n    setAtualizar(false);\n  }, [atualizar]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    size: \"lg\",\n    value: selectValue,\n    onChange: e => {\n      setSelectValue(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Selecione uma op\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Pesquisar por parada\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Pesquisar por parada e linha\"))), /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, (selectValue === \"1\" || selectValue === \"2\") && /*#__PURE__*/React.createElement(FormControl, {\n    type: \"text\",\n    placeholder: \"C\\xF3digo da parada\",\n    value: paradaValue,\n    onChange: e => {\n      setParadaValue(e.target.value);\n    },\n    className: \"mr-sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), (selectValue === \"2\" || selectValue === \"2\") && /*#__PURE__*/React.createElement(FormControl, {\n    type: \"text\",\n    placeholder: \"C\\xF3digo da linha\",\n    value: linhaValue,\n    onChange: e => {\n      setLinhaValue(e.target.value);\n    },\n    className: \"mr-sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), selectValue !== \"\" && /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 41\n    }\n  }, \"Buscar\")));\n}","map":{"version":3,"sources":["/home/gisele/Documentos/repositorios-github/desafio-aiko-frontend/web/src/pages/Home/components/Mapa/components/PrevisaoChegada/components/Search/index.js"],"names":["React","useState","useEffect","Form","FormControl","Button","FaPlus","FaMinus","api","Search","props","resultados","setResultados","atualizar","setAtualizar","paradaValue","setParadaValue","linhaValue","setLinhaValue","selectValue","setSelectValue","loadResults","get","p","cp","then","response","data","console","log","catch","error","onSubmit","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Form, FormControl, Button} from 'react-bootstrap';\nimport {FaPlus, FaMinus} from 'react-icons/fa'\nimport api from '../../../../../../../../services/api'\n\nexport default function Search(props){\n    const { resultados,setResultados, atualizar, setAtualizar }  = props;\n    const [paradaValue, setParadaValue] = useState('');\n    const [linhaValue, setLinhaValue] = useState('');\n    const [selectValue, setSelectValue] = useState('');\n\n    function loadResults(){\n        if(selectValue === \"1\"){\n           \n            api.get(`Previsao/Parada?codigoParada=${resultados? resultados.p.cp : paradaValue}`)\n            .then(response => {\n                if(response.data.p === null){\n                    return;\n                }\n                setResultados(response.data);\n                console.log(\"entrou\")\n            }).catch(function(error){\n                //error\n            })\n    \n\n        }else if(selectValue === \"2\"){\n            api.get(`Previsao?codigoParada=${paradaValue}&codigoLinha=${linhaValue}`)\n            .then(response => {\n                if(response.data.p === null){\n                    return;\n                }\n                setResultados(response.data);\n            }).catch(function(error){\n                //error\n            })\n        }\n    }\n    \n    function onSubmit(e){\n        e.preventDefault();\n        loadResults();\n        setParadaValue('');\n    }\n\n    useEffect(() => {\n        loadResults();\n        setAtualizar(false);\n    }, [atualizar])\n\n    return (\n        <>\n            <Form inline>\n                <Form.Control \n                    as=\"select\"  \n                    size=\"lg\"\n                    value={selectValue}\n                    onChange={(e) => {setSelectValue(e.target.value)}}\n                >\n                    <option hidden>Selecione uma opção</option>\n                    <option value=\"1\">Pesquisar por parada</option>\n                    <option value=\"2\">Pesquisar por parada e linha</option>\n                </Form.Control>\n            </Form> \n            <Form inline onSubmit={onSubmit}>\n                {\n                    (selectValue === \"1\" || selectValue === \"2\") &&\n                    <FormControl \n                    type=\"text\" \n                    placeholder=\"Código da parada\" \n                    value={paradaValue}\n                    onChange={(e) => {setParadaValue(e.target.value)}}\n                    className=\"mr-sm-2\" \n                />\n                }\n                {\n                    (selectValue === \"2\" || selectValue === \"2\") &&\n                    <FormControl \n                    type=\"text\" \n                    placeholder=\"Código da linha\" \n                    value={linhaValue}\n                    onChange={(e) => {setLinhaValue(e.target.value)}}\n                    className=\"mr-sm-2\" \n                />\n                }\n                \n                { selectValue !== \"\" && <Button variant=\"outline-success\" type=\"submit\" >Buscar</Button>}\n            </Form>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}