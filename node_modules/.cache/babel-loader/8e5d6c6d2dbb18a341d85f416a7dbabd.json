{"ast":null,"code":"var _jsxFileName = \"/home/gisele/Documentos/repositorios-github/desafio-aiko-frontend/web/src/pages/Home/components/Mapa/components/BuscarParadas/components/SearchParada/index.js\";\nimport React, { useState } from 'react';\nimport { Form, FormControl, Button } from 'react-bootstrap';\nimport { FaPlus, FaMinus } from 'react-icons/fa';\nimport api from '../../../../../../../../services/api';\nexport default function SearchParada(props) {\n  const {\n    setParadas,\n    veiculo,\n    mostrarParadas,\n    setMostrarParadas\n  } = props;\n  const [value, setValue] = useState('');\n  const [selectValue, setSelectValue] = useState('linha');\n  const [exibirFiltros, setExibirFiltros] = useState(false);\n\n  function onSubmit(e) {\n    e.preventDefault();\n\n    if (exibirFiltros) {\n      api.get(selectValue == \"linha\" ? `Parada/BuscarParadasPorLinha?codigoLinha=${value}` : `Parada/BuscarParadasPorCorredor?codigoCorredor=${value}`).then(response => {\n        setParadas(response.data);\n      }).catch(function (error) {//error\n      });\n    } else {\n      api.get(`Parada/Buscar?termosBusca=${value}`).then(response => {\n        setParadas(response.data);\n      }).catch(function (error) {//error\n      });\n    }\n\n    setValue('');\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    type: \"text\",\n    placeholder: \"Nome ou endere\\xE7o\",\n    className: \"mr-sm-2\",\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), exibirFiltros && /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: e => {\n      setSelectValue(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"linha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Linhas\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"corredor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Corredores\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    type: \"submit\",\n    disabled: value === \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Buscar\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    onClick: () => {\n      setExibirFiltros(!exibirFiltros);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, exibirFiltros ? /*#__PURE__*/React.createElement(FaMinus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }\n  }) : /*#__PURE__*/React.createElement(FaPlus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 50\n    }\n  }), \" filtro\")));\n}","map":{"version":3,"sources":["/home/gisele/Documentos/repositorios-github/desafio-aiko-frontend/web/src/pages/Home/components/Mapa/components/BuscarParadas/components/SearchParada/index.js"],"names":["React","useState","Form","FormControl","Button","FaPlus","FaMinus","api","SearchParada","props","setParadas","veiculo","mostrarParadas","setMostrarParadas","value","setValue","selectValue","setSelectValue","exibirFiltros","setExibirFiltros","onSubmit","e","preventDefault","get","then","response","data","catch","error","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Form, FormControl, Button} from 'react-bootstrap';\nimport {FaPlus, FaMinus} from 'react-icons/fa'\nimport api from '../../../../../../../../services/api'\n\nexport default function SearchParada(props){\n    const { setParadas, veiculo, mostrarParadas, setMostrarParadas} = props;\n    const [value, setValue] = useState('');\n    const [selectValue, setSelectValue] = useState('linha');\n\n    const [exibirFiltros, setExibirFiltros] = useState(false);\n\n    function onSubmit(e){\n        e.preventDefault();\n        if(exibirFiltros){\n\n        api.get(\n            selectValue == \"linha\" ?\n            `Parada/BuscarParadasPorLinha?codigoLinha=${value}`\n            :\n            `Parada/BuscarParadasPorCorredor?codigoCorredor=${value}`\n        ).then(response => {\n            setParadas(response.data);\n        }).catch(function(error){\n            //error\n        })\n\n    }else{\n        api.get(`Parada/Buscar?termosBusca=${value}`)\n            .then(response => {\n                setParadas(response.data);\n            })\n            .catch(function(error){\n                //error\n            })\n        }\n        setValue('');\n    }\n\n    return (\n        <>\n            <Form inline onSubmit={onSubmit}>\n                <FormControl \n                    type=\"text\" \n                    placeholder=\"Nome ou endereÃ§o\" \n                    className=\"mr-sm-2\" \n                    value={value}\n                    onChange={(e) => {setValue(e.target.value)}}\n                />\n                 {\n                    exibirFiltros && \n                    <Form.Control\n                        as=\"select\"\n                        onChange={(e) => {\n                        setSelectValue(e.target.value);\n                    }}>\n                    <option value=\"linha\">Linhas</option>\n                    <option value=\"corredor\">Corredores</option>\n                    </Form.Control>\n                }\n                <Button variant=\"outline-success\" type=\"submit\" disabled={value===\"\"}>Buscar</Button>\n               \n                <Button variant=\"outline-success\" onClick={() => {\n                    setExibirFiltros(!exibirFiltros);\n                }} >{exibirFiltros ?<FaMinus/> : <FaPlus/> } filtro</Button>\n            </Form> \n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}