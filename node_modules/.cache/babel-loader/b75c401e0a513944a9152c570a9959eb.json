{"ast":null,"code":"var _jsxFileName = \"/home/gisele/Documentos/repositorios-github/desafio-aiko-frontend/web/src/pages/Corredores/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport Detail from '../../layouts/Detail';\nimport { Container, Card, Col, ListGroup, Form, FormControl } from 'react-bootstrap';\nimport api from '../../services/api';\nexport default function Corredores(props) {\n  const codigo = props.location.state.codigo;\n  const [paradas, setParadas] = useState([]);\n  const [value, setValue] = useState('');\n\n  function loadParadas() {\n    api.get(`Parada/BuscarParadasPorCorredor?codigoCorredor=${codigo}`).then(response => {\n      setParadas(response.data);\n    }).catch(function (error) {\n      alert(error.message);\n    });\n  }\n\n  useEffect(() => {\n    loadParadas();\n  }, []);\n  return /*#__PURE__*/React.createElement(Detail, {\n    title: \"Paradas por corredor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    type: \"text\",\n    placeholder: \"filtrar\",\n    className: \"mr-sm-2\",\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, paradas.map(parada => {\n    return /*#__PURE__*/React.createElement(ListGroup.Item, {\n      key: parada.cp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }\n    }, \" \", parada.np, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 67\n      }\n    }), parada.ed);\n  }))))));\n}","map":{"version":3,"sources":["/home/gisele/Documentos/repositorios-github/desafio-aiko-frontend/web/src/pages/Corredores/index.js"],"names":["React","useState","useEffect","Detail","Container","Card","Col","ListGroup","Form","FormControl","api","Corredores","props","codigo","location","state","paradas","setParadas","value","setValue","loadParadas","get","then","response","data","catch","error","alert","message","display","justifyContent","map","parada","cp","np","ed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,SAA/B,EAA0CC,IAA1C,EAAgDC,WAAhD,QAAmE,iBAAnE;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEtC,QAAMC,MAAM,GAAGD,KAAK,CAACE,QAAN,CAAeC,KAAf,CAAqBF,MAApC;AAEA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASmB,WAAT,GAAsB;AAClBV,IAAAA,GAAG,CAACW,GAAJ,CAAS,kDAAiDR,MAAO,EAAjE,EACKS,IADL,CACUC,QAAQ,IAAI;AACdN,MAAAA,UAAU,CAACM,QAAQ,CAACC,IAAV,CAAV;AACH,KAHL,EAIKC,KAJL,CAIW,UAASC,KAAT,EAAe;AAClBC,MAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,KANL;AAOH;;AAED1B,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,WAAW;AACd,GAFQ,EAEP,EAFO,CAAT;AAMA,sBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE;AACHS,MAAAA,OAAO,EAAE,MADN;AAEHC,MAAAA,cAAc,EAAE;AAFb,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,SAFhB;AAGI,IAAA,SAAS,EAAC,SAHd;AAII,IAAA,KAAK,EAAEZ,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,eAWA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,CAACe,GAAR,CAAYC,MAAM,IAAI;AACnB,wBACI,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,GAAG,EAAEA,MAAM,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAUD,MAAM,CAACE,EAAjB,MADJ,eACkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADlC,EAESF,MAAM,CAACG,EAFhB,CADJ;AAMH,GAPA,CADL,CAXA,CADA,CALJ,CADR,CADJ;AAkCH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Detail from '../../layouts/Detail';\nimport { Container, Card, Col, ListGroup, Form, FormControl } from 'react-bootstrap';\nimport api from '../../services/api';\n\nexport default function Corredores(props) {\n\n    const codigo = props.location.state.codigo;\n\n    const [paradas, setParadas] = useState([]);\n    const [value, setValue] = useState('');\n\n    function loadParadas(){\n        api.get(`Parada/BuscarParadasPorCorredor?codigoCorredor=${codigo}`)\n            .then(response => {\n                setParadas(response.data);\n            })\n            .catch(function(error){\n                alert(error.message)\n            })\n    }\n\n    useEffect(() => {\n        loadParadas();\n    },[])\n\n\n\n    return (\n        <Detail title=\"Paradas por corredor\">\n                <Container\n                    style={{\n                        display: \"flex\",\n                        justifyContent: \"center\"\n                    }}>\n                    <Col>\n                    <Card>\n                        <Card.Header>\n                            <Form inline >\n                                <FormControl\n                                    type=\"text\"\n                                    placeholder=\"filtrar\"\n                                    className=\"mr-sm-2\"\n                                    value={value}\n                                />\n                            </Form>\n                        </Card.Header>\n                    <ListGroup>\n                        {paradas.map(parada => {\n                            return(\n                                <ListGroup.Item key={parada.cp}>\n                                    <strong> {parada.np} </strong><br/>\n                                        {parada.ed}\n                                </ListGroup.Item>\n                            )\n                        })}\n                    </ListGroup>\n                    </Card>\n                </Col>\n                </Container>\n            </Detail>\n    )\n}"]},"metadata":{},"sourceType":"module"}