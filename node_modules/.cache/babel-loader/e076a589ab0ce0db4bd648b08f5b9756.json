{"ast":null,"code":"var _jsxFileName = \"/home/gisele/Documentos/repositorios-github/desafio-aiko-frontend/web/src/pages/Home/components/Section1/components/CardDropdown/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, FormControl, Button, Card } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport TooltipComponent from '../Tooltip';\nimport api from '../../../../../../services/api';\nexport default function CardDropdown(props) {\n  const {\n    title,\n    path\n  } = props;\n  const history = useHistory();\n  const [corredores, setCorredores] = useState([]);\n  const [value, setValue] = useState('');\n\n  function onSubmit() {\n    history.push({\n      pathname: path,\n      state: {\n        codigo: value\n      }\n    });\n  }\n\n  function loadCorredores() {\n    api.get(\"Corredor\").then(response => {\n      setCorredores(response.data);\n    }).catch(function (error) {});\n  }\n\n  useEffect(() => {\n    loadCorredores();\n  }, []);\n  return /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    className: \"cardDrop-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, title, /*#__PURE__*/React.createElement(TooltipComponent, {\n    content: \"teste\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    style: {},\n    as: \"select\",\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, corredores.map(corredor => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: corredor.cc,\n      key: corredor.cc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, corredor.nc);\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Search\")));\n}","map":{"version":3,"sources":["/home/gisele/Documentos/repositorios-github/desafio-aiko-frontend/web/src/pages/Home/components/Section1/components/CardDropdown/index.js"],"names":["React","useState","useEffect","Form","FormControl","Button","Card","useHistory","TooltipComponent","api","CardDropdown","props","title","path","history","corredores","setCorredores","value","setValue","onSubmit","push","pathname","state","codigo","loadCorredores","get","then","response","data","catch","error","e","target","map","corredor","cc","nc"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,IAAR,EAAcC,WAAd,EAA2BC,MAA3B,EAAmCC,IAAnC,QAA8C,iBAA9C;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,gBAAP,MAA6B,YAA7B;AACA,OAAOC,GAAP,MAAgB,gCAAhB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAExC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBF,KAAzB;AAEA,QAAMG,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASkB,QAAT,GAAmB;AACfL,IAAAA,OAAO,CAACM,IAAR,CAAa;AACTC,MAAAA,QAAQ,EAAER,IADD;AAETS,MAAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAEN;AADL;AAFE,KAAb;AAMH;;AAED,WAASO,cAAT,GAAyB;AACrBf,IAAAA,GAAG,CAACgB,GAAJ,CAAQ,UAAR,EACKC,IADL,CACUC,QAAQ,IAAI;AACdX,MAAAA,aAAa,CAACW,QAAQ,CAACC,IAAV,CAAb;AACH,KAHL,EAIKC,KAJL,CAIW,UAASC,KAAT,EAAgB,CAEtB,CANL;AAOH;;AACD5B,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,EAAC,oBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,KADL,eAEI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,QAAQ,EAAEO,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,KAAK,EAAE,EADX;AAEI,IAAA,EAAE,EAAC,QAFP;AAGI,IAAA,QAAQ,EAAGY,CAAD,IAAO;AACbb,MAAAA,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASf,KAAV,CAAR;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASQF,UAAU,CAACkB,GAAX,CAAeC,QAAQ,IAAI;AACvB,wBACI;AAAQ,MAAA,KAAK,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,MAAA,GAAG,EAAED,QAAQ,CAACC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+CD,QAAQ,CAACE,EAAxD,CADJ;AAGH,GAJD,CATR,CADA,eAiBI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,iBAAhB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,CALJ,CADJ;AA2BH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Form, FormControl, Button, Card} from 'react-bootstrap';\nimport {useHistory} from 'react-router-dom';\nimport TooltipComponent from '../Tooltip';\nimport api from '../../../../../../services/api';\n\nexport default function CardDropdown(props) {\n\n    const { title, path  } = props;\n\n    const history = useHistory();\n\n    const [corredores, setCorredores] = useState([]);\n    const [value, setValue] = useState('');\n\n    function onSubmit(){\n        history.push({\n            pathname: path,\n            state: {\n                codigo: value\n            }\n        })\n    }\n\n    function loadCorredores(){\n        api.get(\"Corredor\")\n            .then(response => {\n                setCorredores(response.data);\n            })\n            .catch(function(error) {\n\n            })\n    }\n    useEffect(() => {\n        loadCorredores();\n    }, [])\n\n    return (\n        <Card body className=\"cardDrop-container\">\n            <Card.Title>\n                {title}\n                <TooltipComponent content=\"teste\"/>\n            </Card.Title>\n            <Form inline onSubmit={onSubmit}>\n            <Form.Control \n                style={{}} \n                as=\"select\"\n                onChange={(e) => {\n                    setValue(e.target.value);\n                }}\n                \n            >\n                {\n                    corredores.map(corredor => {\n                        return(\n                            <option value={corredor.cc} key={corredor.cc}>{corredor.nc}</option>\n                        )\n                    })\n                }\n                </Form.Control>\n                <Button variant=\"outline-success\" type=\"submit\">Search</Button>\n            </Form>\n        </Card>\n    )\n}"]},"metadata":{},"sourceType":"module"}