{"ast":null,"code":"var _jsxFileName = \"/home/gisele/Documentos/repositorios-github/desafio-aiko-frontend/web/src/pages/Linhas/index.js\";\nimport React, { useState } from 'react';\nimport Detail from '../../layouts/Detail';\nimport { Container, Col, Card, Accordion, ListGroup, Form, FormControl, Button } from 'react-bootstrap';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../services/api';\nexport default function Linhas(props) {\n  const busca = props.location.state.busca;\n  const history = useHistory();\n  const [filtro, setFiltro] = useState(busca);\n  const [paradas, setParadas] = useState([]);\n  const [value, setValue] = useState('');\n\n  function handleGoBack() {\n    history.goBack();\n  }\n\n  function onClickLinha(codigo) {\n    setParadas([]);\n    api.get(`Parada/BuscarParadasPorLinha?codigoLinha=${codigo}`).then(response => {\n      setParadas(response.data);\n    }).catch(function (error) {//erro\n    });\n  }\n\n  function onChange(e) {\n    setValue(e.target.value);\n\n    if (e.target.value.length > 0) {\n      setFiltro(busca.filter(item => {\n        return item.lt.match(e.target.value) || item.tp.toLowerCase().match(e.target.value.toLowerCase()) || item.ts.toLowerCase().match(e.target.value.toLowerCase());\n      }));\n    } else {\n      setFiltro(busca);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Detail, {\n    title: \"Buscar por linhas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    type: \"text\",\n    placeholder: \"filtrar\",\n    className: \"mr-sm-2\",\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, filtro.map(item => {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: item.cl,\n      onClick: () => onClickLinha(item.cl),\n      style: {\n        textAlign: \"left\",\n        textDecoration: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 37\n      }\n    }, item.lt, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 51\n      }\n    }), item.sl === 1 ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 45\n      }\n    }, item.tp, \" \", /*#__PURE__*/React.createElement(FaArrowRight, {\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 59\n      }\n    }), \" \", item.ts) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 45\n      }\n    }, item.ts, \" \", /*#__PURE__*/React.createElement(FaArrowRight, {\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 59\n      }\n    }), \" \", item.tp))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: item.cl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    }, paradas.length > 0 && /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 45\n      }\n    }, paradas.map(parada => {\n      return /*#__PURE__*/React.createElement(ListGroup.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 62\n        }\n      }, \" \", parada.np, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 92\n        }\n      }), parada.ed);\n    })))));\n  }))));\n}","map":{"version":3,"sources":["/home/gisele/Documentos/repositorios-github/desafio-aiko-frontend/web/src/pages/Linhas/index.js"],"names":["React","useState","Detail","Container","Col","Card","Accordion","ListGroup","Form","FormControl","Button","FaArrowLeft","FaArrowRight","useHistory","api","Linhas","props","busca","location","state","history","filtro","setFiltro","paradas","setParadas","value","setValue","handleGoBack","goBack","onClickLinha","codigo","get","then","response","data","catch","error","onChange","e","target","length","filter","item","lt","match","tp","toLowerCase","ts","map","cl","textAlign","textDecoration","sl","parada","np","ed"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Detail from '../../layouts/Detail';\nimport { Container, Col, Card, Accordion, ListGroup, Form, FormControl, Button } from 'react-bootstrap';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa'\nimport { useHistory } from 'react-router-dom';\nimport api from '../../services/api';\n\nexport default function Linhas(props) {\n\n    const busca = props.location.state.busca;\n    const history = useHistory();\n\n    const [filtro, setFiltro] = useState(busca);\n    const [paradas, setParadas] = useState([]);\n    const [value, setValue] = useState('');\n\n    function handleGoBack() {\n        history.goBack();\n    }\n\n    function onClickLinha(codigo) {\n        setParadas([]);\n        api.get(`Parada/BuscarParadasPorLinha?codigoLinha=${codigo}`)\n            .then(response => {\n                setParadas(response.data);\n            })\n            .catch(function (error) {\n                //erro\n            })\n    }\n\n    function onChange(e) {\n        setValue(e.target.value);\n        if (e.target.value.length > 0) {\n            setFiltro(busca.filter(item => { return item.lt.match(e.target.value) || item.tp.toLowerCase().match(e.target.value.toLowerCase()) || item.ts.toLowerCase().match(e.target.value.toLowerCase()) }))\n        } else {\n            setFiltro(busca);\n        }\n    }\n\n    return (\n    <Detail title=\"Buscar por linhas\">\n        <Card style={{}}>\n            <Card.Header>\n                <Form inline >\n                    <FormControl\n                        type=\"text\"\n                        placeholder=\"filtrar\"\n                        className=\"mr-sm-2\"\n                        value={value}\n                        onChange={onChange}\n                    />\n                </Form>\n            </Card.Header>\n            <Accordion >\n\n                {\n                    filtro.map(item => {\n                        return (\n\n                            <Card>\n                                <Card.Header>\n                                    <Accordion.Toggle\n                                        as={Button}\n                                        variant=\"link\"\n                                        eventKey={item.cl}\n                                        onClick={() => onClickLinha(item.cl)}\n                                        style={{\n                                            textAlign: \"left\",\n                                            textDecoration: \"none\"\n                                        }}\n                                    >\n                                        {item.lt} <br />\n                                        {item.sl === 1 ?\n                                            <p>\n                                                {item.tp} <FaArrowRight color=\"green\" /> {item.ts}\n                                            </p> :\n                                            <p>\n                                                {item.ts} <FaArrowRight color=\"green\" /> {item.tp}\n                                            </p>\n                                        }\n                                    </Accordion.Toggle>\n                                </Card.Header>\n                                <Accordion.Collapse eventKey={item.cl}>\n                                    <ListGroup>\n                                        {paradas.length > 0 &&\n                                            <Card.Body>\n                                                {paradas.map(parada => {\n                                                    return (\n                                                        <ListGroup.Item>\n                                                             <strong> {parada.np} </strong><br/>\n                                                                {parada.ed} \n                                                        </ListGroup.Item>\n                                                    )\n                                                })}\n                                            </Card.Body>\n                                        }\n                                    </ListGroup>\n                                </Accordion.Collapse>\n                            </Card>\n                        )\n\n                    })\n                }\n            </Accordion>\n\n        </Card> \n    </Detail>  \n    )\n}"]},"metadata":{},"sourceType":"module"}